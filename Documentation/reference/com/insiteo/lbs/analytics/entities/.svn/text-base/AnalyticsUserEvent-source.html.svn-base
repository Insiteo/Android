<!DOCTYPE html>

















































<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">

  <meta name="description" content="Javadoc API documentation for Insiteo API Documentation - Version 3.2." />

<link rel="shortcut icon" type="image/x-icon" href="../../../../../favicon.ico" />
<title>

  AnalyticsUserEvent


| Insiteo API Documentation - Version 3.2

</title>
<link href="../../../../../../assets/doclava-developer-docs.css" rel="stylesheet" type="text/css" />
<link href="../../../../../../assets/customizations.css" rel="stylesheet" type="text/css" />
<script src="../../../../../../assets/search_autocomplete.js" type="text/javascript"></script>
<script src="../../../../../../assets/jquery-resizable.min.js" type="text/javascript"></script>
<script src="../../../../../../assets/doclava-developer-docs.js" type="text/javascript"></script>
<script src="../../../../../../assets/prettify.js" type="text/javascript"></script>
<script type="text/javascript">
  setToRoot("../../../../../", "../../../../../../assets/");
</script>
<script src="../../../../../../assets/doclava-developer-reference.js" type="text/javascript"></script>
<script src="../../../../../../assets/navtree_data.js" type="text/javascript"></script>
<script src="../../../../../../assets/customizations.js" type="text/javascript"></script>
<noscript>
  <style type="text/css">
    html,body{overflow:auto;}
    #body-content{position:relative; top:0;}
    #doc-content{overflow:visible;border-left:3px solid #666;}
    #side-nav{padding:0;}
    #side-nav .toggle-list ul {display:block;}
    #resize-packages-nav{border-bottom:3px solid #666;}
  </style>
</noscript>
</head>

<body class="">

<div id="header">
    <div id="headerLeft">
    
      <span id="masthead-title">Insiteo API Documentation - Version 3.2</span>
    
    </div>
    <div id="headerRight">
      
  <div id="search" >
      <div id="searchForm">
          <form accept-charset="utf-8" class="gsc-search-box" 
                onsubmit="return submit_search()">
            <table class="gsc-search-box" cellpadding="0" cellspacing="0"><tbody>
                <tr>
                  <td class="gsc-input">
                    <input id="search_autocomplete" class="gsc-input" type="text" size="33" autocomplete="off"
                      title="search developer docs" name="q"
                      value="search developer docs"
                      onFocus="search_focus_changed(this, true)"
                      onBlur="search_focus_changed(this, false)"
                      onkeydown="return search_changed(event, true, '../../../../../')"
                      onkeyup="return search_changed(event, false, '../../../../../')" />
                  <div id="search_filtered_div" class="no-display">
                      <table id="search_filtered" cellspacing=0>
                      </table>
                  </div>
                  </td>
                  <td class="gsc-search-button">
                    <input type="submit" value="Search" title="search" id="search-button" class="gsc-search-button" />
                  </td>
                  <td class="gsc-clear-button">
                    <div title="clear results" class="gsc-clear-button">&nbsp;</div>
                  </td>
                </tr></tbody>
              </table>
          </form>
      </div><!-- searchForm -->
  </div><!-- search -->
      
        
  <div id="api-level-toggle">
    <input type="checkbox" id="apiLevelCheckbox" onclick="toggleApiLevelSelector(this)" />
    <label for="apiLevelCheckbox" class="disabled">Filter by API Level: </label>
    <select id="apiLevelSelector">
      <!-- option elements added by buildApiLevelSelector() -->
    </select>
  </div>
  <script>
   var SINCE_DATA = [ 'v1', 'v1' ];
    
    var SINCE_LABELS = [ 'v1', 'v1' ];
    buildApiLevelSelector();
    addLoadEvent(changeApiLevel);
  </script>


      
    </div>
</div><!-- header -->


  <div class="g-section g-tpl-240" id="body-content">
    <div class="g-unit g-first side-nav-resizable" id="side-nav">
      <div id="swapper">
        <div id="nav-panels">
          <div id="resize-packages-nav">
            <div id="packages-nav">
              <div id="index-links">
                <a href="../../../../../packages.html"  >Package Index</a> | 
                <a href="../../../../../classes.html" >Class Index</a>
              </div>
              <ul>
                
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/analytics/package-summary.html">com.insiteo.lbs.analytics</a></li>
    <li class="selected api apilevel-">
  <a href="../../../../../com/insiteo/lbs/analytics/entities/package-summary.html">com.insiteo.lbs.analytics.entities</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/common/package-summary.html">com.insiteo.lbs.common</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/common/auth/package-summary.html">com.insiteo.lbs.common.auth</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/common/auth/entities/package-summary.html">com.insiteo.lbs.common.auth.entities</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/common/init/package-summary.html">com.insiteo.lbs.common.init</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/geofence/package-summary.html">com.insiteo.lbs.geofence</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/geofence/render/package-summary.html">com.insiteo.lbs.geofence.render</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/itinerary/package-summary.html">com.insiteo.lbs.itinerary</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/itinerary/entities/package-summary.html">com.insiteo.lbs.itinerary.entities</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/location/package-summary.html">com.insiteo.lbs.location</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/location/utils/package-summary.html">com.insiteo.lbs.location.utils</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/map/package-summary.html">com.insiteo.lbs.map</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/map/database/package-summary.html">com.insiteo.lbs.map.database</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/map/entities/package-summary.html">com.insiteo.lbs.map.entities</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/map/gestures/package-summary.html">com.insiteo.lbs.map.gestures</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/map/render/package-summary.html">com.insiteo.lbs.map.render</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/map/utils/package-summary.html">com.insiteo.lbs.map.utils</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/meetme/package-summary.html">com.insiteo.lbs.meetme</a></li>
    <li class="api apilevel-">
  <a href="../../../../../com/insiteo/lbs/meetme/requests/package-summary.html">com.insiteo.lbs.meetme.requests</a></li>
              </ul><br/>
            </div> <!-- end packages -->
          </div> <!-- end resize-packages -->
          <div id="classes-nav">
            <ul>
              
              
    <li><h2>Classes</h2>
      <ul>
          <li class="api apilevel-"><a href="../../../../../com/insiteo/lbs/analytics/entities/AnalyticsGenericEvent.html">AnalyticsGenericEvent</a></li>
          <li class="api apilevel-"><a href="../../../../../com/insiteo/lbs/analytics/entities/AnalyticsLocationEvent.html">AnalyticsLocationEvent</a></li>
          <li class="selected api apilevel-"><a href="../../../../../com/insiteo/lbs/analytics/entities/AnalyticsUserEvent.html">AnalyticsUserEvent</a></li>
      </ul>
    </li>
              
              
              
              
            </ul><br/>
          </div><!-- end classes -->
        </div><!-- end nav-panels -->
        <div id="nav-tree" style="display:none">
          <div id="index-links">
            <a href="../../../../../packages.html"  >Package Index</a> | 
            <a href="../../../../../classes.html" >Class Index</a>
          </div>
        </div><!-- end nav-tree -->
      </div><!-- end swapper -->
    </div> <!-- end side-nav -->
    <script>
      if (!isMobile) {
        $("<a href='#' id='nav-swap' onclick='swapNav();return false;' style='font-size:10px;line-height:9px;margin-left:1em;text-decoration:none;'><span id='tree-link'>Use Tree Navigation</span><span id='panel-link' style='display:none'>Use Panel Navigation</span></a>").appendTo("#side-nav");
        chooseDefaultNav();
        if ($("#nav-tree").is(':visible')) {
          init_default_navtree("../../../../../");
        } else {
          addLoadEvent(function() {
            scrollIntoView("packages-nav");
            scrollIntoView("classes-nav");
          });
        }
        $("#swapper").css({borderBottom:"2px solid #aaa"});
      } else {
        swapNav(); // tree view should be used on mobile
      }
    </script>



<div class="g-unit" id="doc-content">

<div id="api-info-block">




<div class="sum-details-links">

<div>
<a href="AnalyticsUserEvent.html">View Documentation</a>
</div>


</div><!-- end sum-details-links -->
<div class="api-level">
  

  Since: <a href="../../../../../guide/appendix/api-levels.html#level">API Level </a>


  
  

</div>
</div><!-- end api-info-block -->


<!-- ======== START OF CLASS DATA ======== -->

<div id="jd-header">
    public
     
     
    
    class
<h1>AnalyticsUserEvent</h1>



  
  
  


</div><!-- end header -->
<div id="jd-content">
  <pre class="prettyprint">
package com.insiteo.lbs.analytics.entities;

import android.content.Context;
import android.content.pm.PackageInfo;
import android.content.pm.PackageManager.NameNotFoundException;
import android.content.res.Configuration;
import android.os.Build;
import android.telephony.TelephonyManager;
import android.util.DisplayMetrics;
import android.view.WindowManager;

import com.insiteo.lbs.analytics.AnalyticsConstants;
import com.insiteo.lbs.analytics.AnalyticsManager;
import com.insiteo.lbs.common.CommonConstants;
import com.insiteo.lbs.common.ConnectivityStatus;
import com.insiteo.lbs.common.init.InitProvider;

/**
 * User event that can be used to trace the type of device (OS version, resolution, carrier, network, device name and model) 
 * and Insiteo site identificators (site id and lang, application and API version).
 * 
 */
public class AnalyticsUserEvent extends AnalyticsAbstractEvent{
	
	private final static String TAG = "AnalyticsUserEvent";
	
	private String mVersion = ""; // Version of the application
	private String mApiVersion = ""; 

	private int mSiteId;
	private int mSiteVersion; 	
	private String mSiteLang = "";
	
	private String mPlatform = "";
	private String mOSVersion = "";
	private String mResolution = "";
	private String mCarrier = "";
	private String mNetwork = ""; 
	private String mDeviceName = "";
	private String mModelName = "";	

	/**
	 * Creates the UserEvent from the given parameters. This is used when retrieving the event from the DB
	 * @param aId
	 * @param aTimestamp
	 * @param aGuid
	 * @param aAppVersion
	 * @param aApiVersion
	 * @param aVersion
	 * @param aSiteLang
	 * @param aPlatform
	 * @param aOSVersion
	 * @param aResolution
	 * @param aCarrier
	 * @param aNetwork
	 * @param aDeviceName
	 * @param aModelName
	 */
	public AnalyticsUserEvent(long aId,long aTimestamp, String aGuid, int aAppVersion, String aApiVersion, int siteId, String aVersion, String aSiteLang, String aPlatform, String aOSVersion, String aResolution, String aCarrier, String aNetwork, String aDeviceName, String aModelName) {
		super(aId, aTimestamp, aGuid);
		this.mSiteVersion = aAppVersion;
		this.mApiVersion = aApiVersion;
		this.mSiteId = siteId;
		this.mVersion = aVersion;
		this.mSiteLang = aSiteLang;
		this.mPlatform = aPlatform;
		this.mOSVersion = aOSVersion;
		this.mResolution = aResolution;
		this.mCarrier = aCarrier;
		this.mNetwork = aNetwork;
		this.mDeviceName = aDeviceName;
		this.mModelName = aModelName;
	}

	/**
	 * Create a new UserEvent.
	 */
	public AnalyticsUserEvent(){
		super(AnalyticsConstants.TYPE_USER_EVENT);

		Context context = AnalyticsManager.getInstance().getApplicationContext();
				
		if (context != null) {
			 PackageInfo pInfo;
			    
				try {
					pInfo = context.getPackageManager().getPackageInfo(context.getPackageName(), 0);
				    
				    mVersion = pInfo.packageName + "/" + pInfo.versionName;
				    
					// Insiteo API information 
					mApiVersion = CommonConstants.API_VERSION;
					mSiteId = InitProvider.getInstance().getSiteId();
					mSiteVersion = InitProvider.getInstance().getAppVersion();
					mSiteLang = InitProvider.getInstance().getLang();
				   
					
					final TelephonyManager tm = (TelephonyManager) context.getSystemService(Context.TELEPHONY_SERVICE);
					
					mPlatform = "Android";
					mOSVersion = android.os.Build.VERSION.RELEASE;
					
					DisplayMetrics displayMetrics = new DisplayMetrics();
					WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);
					wm.getDefaultDisplay().getMetrics(displayMetrics);
					int screenWidth = displayMetrics.widthPixels;
					int screenHeight = displayMetrics.heightPixels;
					
					mResolution = String.valueOf(screenWidth) + "x" + String.valueOf(screenHeight);
					
					mCarrier = "" + tm.getNetworkOperatorName();
					mNetwork = "" + ConnectivityStatus.getNetworkType(context);
					mDeviceName = "" + android.os.Build.MODEL;
					mModelName = "" + (isTablet(context) ? AnalyticsConstants.DEVICE_TYPE_TABLET : AnalyticsConstants.DEVICE_TYPE_PHONE);
					
					
				} catch (NameNotFoundException e) {
					e.printStackTrace();
				}
		}
	   
		
	}	
	
	/**
	 * 
	 * @param context
	 * @return
	 */
	private static boolean isTablet(Context context) {
	    return (context.getResources().getConfiguration().screenLayout
	            &amp; Configuration.SCREENLAYOUT_SIZE_MASK)
	            &gt;= Configuration.SCREENLAYOUT_SIZE_LARGE;
	}
	
	/**
	 * Returns the Insiteo API version.
	 * @return the Insiteo API version.
	 */
	public String getApiVersion() {
		return mApiVersion;
	}

	/**
	 * Returns the Insiteo site version of this {@link AnalyticsUserEvent}.
	 * @return the Insiteo site version.
	 */
	public int getSiteVersion() {
		return mSiteVersion;
	}

	/**
	 * Returns the Insiteo site id of this {@link AnalyticsUserEvent}.
	 * @return the Insiteo site id.
	 */
	public int getSiteId() {
		return mSiteId;
	}
	
	/**
	 * Returns the Insiteo site lang of this {@link AnalyticsUserEvent}.
	 * @return the Insiteo site lang.
	 */
	public String getSiteLang() {
		return mSiteLang;
	}
	
	/**
	 * Returns the "packageName / packageVersion" of the application that generated this {@link AnalyticsUserEvent}.
	 * @return the "packageName / packageVersion" of the application.
	 */
	public String getVersion() {
		return mVersion;
	}

	/**
	 * Returns the platform value in this case Android.
	 * @return Android.
	 */
	public String getPlatform() {
		return mPlatform;
	}

	/**
	 * Returns the Android OS version given by {@link Build.VERSION#RELEASE}.
	 * @return Android OS version.
	 */
	public String getOSVersion() {
		return mOSVersion;
	}

	/**
	 * Returns the resolution of the device in the form of width x height
	 * @return the screen resolution
	 */
	public String getResolution() {
		return mResolution;
	}

	/**
	 * Returns the carrier of the device returned by {@link TelephonyManager#getNetworkOperatorName()}.
	 * @return the device carrier.
	 */
	public String getCarrier() {
		return mCarrier;
	}

	/**
	 * Returns the network type that is used. See {@link ConnectivityStatus#getNetworkType(Context)}.
	 * @return The network type.
	 */
	public String getNetwork() {
		return mNetwork;
	}

	/**
	 * Return the device name given by {@link Build#MODEL}.
	 * @return the device name
	 */
	public String getDeviceName() {
		return mDeviceName;
	}

	/**
	 * Return the device type {@link AnalyticsConstants#DEVICE_TYPE_PHONE} or {@link AnalyticsConstants#DEVICE_TYPE_TABLET}.
	 * @return the device type
	 */
	public String getModelName() {
		return mModelName;
	}
	
	/**
	 * Check if 2 {@link AnalyticsUserEvent} are equals based on their Insiteo site identification (site id, version and lang) 
	 * and on the network type. 
	 * @param newUser the {@link AnalyticsUserEvent} to compare.
	 * @return True if they are equal.
	 */
	public boolean isEqual(AnalyticsUserEvent newUser){
		
		if(this.mSiteId != newUser.getSiteId()) return false;
		if(this.mSiteVersion != newUser.getSiteVersion()) return false;
		if(!this.mSiteLang.equals(newUser.getSiteLang())) return false;
		
		if(!this.mNetwork.equals(newUser.getNetwork())) return false;
		
		return true;
	}
}

  </pre>
</div>
<div id="footer">
Generated by <a href="http://code.google.com/p/doclava/">Doclava</a>.
</div> <!-- end footer -->

</div> <!-- jd-content -->

</div><!-- end doc-content -->

</div> <!-- end body-content --> 

<script type="text/javascript">
init(); /* initialize doclava-developer-docs.js */
</script>

</body>
</html>
